name: CI and CD to AWS

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags'
  push:
    branches:
      - develop

jobs:
  deploy:
    name: DEPLOY
    runs-on: ubuntu-18.04

    steps:
      - name: Debug Action
        uses: hmarr/debug-action@v1.0.0
        
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Grant execute permission for gradlew
        run: |
          chmod +x gradlew
      - name: Properties 파일에 redis password 주입
        uses: christian-draeger/write-properties@1.0.1
        with:
          path: './src/main/resources/application.properties'
          property: 'spring.redis.password'
          value: ${{ secrets.spring_redis_password }}
      - name: Properties 파일에 redis host 주입
        uses: christian-draeger/write-properties@1.0.1
        with:
          path: './src/main/resources/application.properties'
          property: 'spring.redis.host'
          value: '127.0.0.1'
      - name: Properties 파일에 mysql password 주입
        uses: christian-draeger/write-properties@1.0.1
        with:
          path: './src/main/resources/application-local.properties'
          property: 'spring.datasource.password'
          value: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
      - name: Build with Gradle test
        run: ./gradlew test
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: build/test-results/**/*.xml
          check_name: '[unit-test] Results'
      - name: Build with Gradle
        run: ./gradlew build

      - name: copy appspec.yml and deploy.sh
        run: cp appspec.yml ./build/libs/appspec.yml && cp deploy.sh ./build/libs/deploy.sh
        shell: bash
      - name: Make zip file
        run: zip -qq -r ./$GITHUB_SHA.zip .
        shell: bash
        working-directory: ./build/libs

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://mashup-s3/$GITHUB_SHA.zip
        working-directory: ./build/libs

      - name: Code Deploy
        run: aws deploy create-deployment --application-name mashup-order-pay --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name cicdgroup --s3-location bucket=mashup-s3,bundleType=zip,key=$GITHUB_SHA.zip
